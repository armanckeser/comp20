const cool = require('cool-ascii-faces');
const cors = require('cors');
const bodyParser = require('body-parser');
const express = require('express');
const path = require('path');
const Joi = require('joi');

var app = express();

app
    .use(bodyParser.json())
    .use(bodyParser.urlencoded({ extended : true }))

var mongoUri = process.env.MONGODB_URI || 'mongodb://localhost/nodemongo';
var MongoClient = require('mongodb').MongoClient, format = require('util').format;
var db = MongoClient.connect(mongoUri, (err, dbConn) => db = dbConn);
const PORT = process.env.PORT || 5000;

var vehicles = ["JANET","NgfcWZmS", "tNEh59TC", "suFKyeZg", "VMerzMH8", "6tWDkKh6", "ajNnfhJj", "bCxY6mCw", "Cq4NX9eE", "mXfkjrFw", "EMYaM9D8", "nZXB8ZHz", "Tkwu74WC", "TnA763WN", "TaR8XyMe", "5KWpnAJN", "uf5ZrXYw"]

const ridesSchema = Joi.object().keys({
  username: Joi.string().alphanum().required(),
  lat: Joi.number().required(),
  lng: Joi.number().required()
})

app
    .use(express.static(path.join(__dirname, 'public')))
    .use(cors())
    .set('views', path.join(__dirname, 'views'))
    .set('view engine', 'ejs')
    .get('/', (req, res) => res.render('pages/index'))
    .get('/cool', (req, res) => res.send(cool()))
    .post('/rides', (req, res) => {
        res.header("Access-Control-Allow-Origin", "*");
        body = req.body;
        Joi.validate(body, ridesSchema, (error, value) => {
          if (error) {
            res.status(422).json({
              error: "Whoops, something is wrong with your data!"
            });
          } else {
            const date = new Date();
            const item = 
            {
              "username": value.username,
              "lat"     : value.lat,
              "lng"     : value.lng,
              "created_at" : date 
            };
            let collToInsert = "";
            console.log(item);
            if (vehicles.includes(value.username))
                collToInsert = 'vehicles';
            else
                collToInsert = 'passengers';

            db.collection(collToInsert, (err, coll) => {
                coll.insert(item, (err, saved) => {
                if (err) {
                  res.send(500);
                }
                else {
                  // TODO: Return based on COLL
                }
              });
            });
          }
      });
    })
    .listen(PORT, () => console.log(`Listening on ${ PORT }`))
